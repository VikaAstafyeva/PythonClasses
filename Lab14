#1
import numpy as np
from matplotlib import pyplot as plt
x0 = 1.8
y0 = 2.6
xp = 2.8
n = 11
h = (xp-x0)/(n-1)
x = np.linspace(x0,xp,n)
y = np.zeros([n])
y[0] = y0
for i in range(1,n):
    y[i]= y[i-1] + h*(x[i-1]+np.cos(y[i-1]/np.sqrt(5)))
for i in range (n):
    print('xi = ',round(x[i],1),'      yi =' ,round(y[i],4))
plt.plot(x,y, 'rs-')
plt.grid(color = 'k', 
         linestyle = '-')
plt.title('Eulerâ€™s Method')   
plt.xlabel('x')
plt.ylabel('y')
plt.show()

#2
import numpy as np
from matplotlib import pyplot as plt
x0 = 1.6
y0 = 4.6
xp = 2.6
n = 11
h = (xp-x0)/(n-1)
print (h)
x = np.linspace(x0,xp,n)
y = np.zeros([n])
y[0] = y0
for i in range(1,n):
    y[i]= y[i-1]+h/2*(x[i-1]+np.sin(y[i-1]/3)+ x[i+1]+np.sin(y[i-1]+0,1*x[i-1]+ np.sin(y[i-1]/3)))
for i in range (n):
    print('xi = ',round(x[i],1),'      yi =' ,round(y[i],4))
plt.plot(x,y, 'rs-')
plt.grid(color = 'k', 
         linestyle = '-')
plt.title('Euler-Cauchy Method')   
plt.xlabel('x')
plt.ylabel('y')
plt.show()

#3
import numpy as np
from matplotlib import pyplot as plt
x = np.linspace(1.6, 2.6, 11)
y = [4.6, 4.79, 4.9990, 5.2284, 5.4787, 5.7498, 6.0408, 6.3495, 6.6729, 7.0071, 7.3478]
plt.plot(x,y, 'rs-')
plt.grid(color = 'k', 
         linestyle = '-')
plt.title('Euler-Cauchy Method')   
plt.xlabel('x')
plt.ylabel('y')
plt.show()
